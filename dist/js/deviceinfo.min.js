/*!
 * DeviceInfo v0.1
 * Dynamic Bookmarklet to quickly access the backend of your tool
 *
 * Copyright (c) 2017 - Tom Lutzenberger (lutzenbergerthomas at gmail dot com)
 * https://github.com/tomlutzenberger/device-info
 *
 * @license: Licensed under the MIT license
 * https://github.com/tomlutzenberger/device-info/blob/master/LICENSE
 * https://tomlutzenberger.github.io/device-info/
 */
const DeviceInfo=()=>{const e={getInnerWidth:()=>window.innerWidth||"undefined",getInnerHeight:()=>window.innerHeight||"undefined",setWindowInnerDimension:()=>{const n=`${e.getInnerWidth()}x${e.getInnerHeight()}`;return o("window-inner-dimension",n)},getOuterWidth:()=>window.outerWidth||"undefined",getOuterHeight:()=>window.outerHeight||"undefined",setWindowOuterDimension:()=>{const n=`${e.getOuterWidth()}x${e.getOuterHeight()}`;return o("window-outer-dimension",n)},getMaxWidth:()=>window.screen.availWidth||"undefined",getMaxHeight:()=>window.screen.availHeight||"undefined",setWindowMaxDimension:()=>{const n=`${e.getMaxWidth()}x${e.getMaxHeight()}`;return o("window-max-dimension",n)},getSize:()=>{let n="";n=window.fullScreen?"Fullscreen":e.getOuterWidth()===window.screen.availWidth&&e.getOuterHeight()===window.screen.availHeight?"Maximized":160===e.getOuterWidth()&&28===e.getOuterHeight()?"Minimized":"Restored";return n},setWindowSize:()=>{const n=`${e.getSize()}`;return o("window-size",n)}};const n={getWidth:()=>i(window.screen.width,"window.screen.width"),getHeight:()=>i(window.screen.height,"window.screen.height"),setDimension:()=>{const e=`${n.getWidth()}x${n.getHeight()}`;return o("screen-dimension",e)},getPixelRatio:()=>i(window.devicePixelRatio,"window.devicePixelRatio"),setPixelRatio:()=>{const e=`${n.getPixelRatio()}x`;return o("screen-pixel-ratio",e)},getColorDepth:()=>i(window.screen.colorDepth,"window.screen.colorDepth"),setColorDepth:()=>{const e=`${n.getColorDepth()} Bit`;return o("screen-color-depth",e)},getScreenType:()=>{let n=!0;(window.screenX<0||window.screenY<0||window.screenX>e.getMaxWidth()||window.screenY>e.getMaxHeight())&&(n=!1);return n?"Primary":"Secondary"},setScreenType:()=>{const e=`${n.getScreenType()} Screen`;return o("screen-type",e)},getScreenPosition:()=>{let n="";let t="";n=window.screenX<0?"Left":window.screenX>e.getMaxWidth()?"Right":"Center";t=window.screenY<0?"Top":window.screenY>e.getMaxHeight()?"Bottom":"Center";return n===t?n:n+" "+t},setScreenPosition:()=>{const e=`${n.getScreenPosition()}`;return o("screen-position",e)}};const t=(e,...n)=>{const t=window.console;let i=Object.keys(n).map(e=>n[e]);i.unshift("[DeviceInfo]");if(i.length>=2)return"function"==typeof t[e]?(t[e].apply(console,i),!0):(t.error("console."+e+" is not a valid logging function."),t.debug.apply(console,i),!1);return!1};const i=(e,n)=>void 0===e||null===e?(t("warn",`${n} is undefined (=${e})`),"undefined"):e;const o=(e,n)=>{const i=document.getElementById(e);if(null!==i){const e="undefined"===n?"text-danger":"text-success";return i.lastElementChild.innerHTML=`<span class="${e}">${n}</span>`,!0}return t("error","#window-max-dimension is not a DOM element"),!1};const r=()=>{e.setWindowInnerDimension();e.setWindowOuterDimension();e.setWindowMaxDimension();e.setWindowSize();n.setDimension();n.setPixelRatio();n.setColorDepth();n.setScreenType();n.setScreenPosition()};return{execute:r,log:t,typeCheck:i,injectIntoDom:o,win:e,screen:n}},di=DeviceInfo();di.execute();