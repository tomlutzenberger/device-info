/*!
 * DeviceInfo v0.1
 * Dynamic Bookmarklet to quickly access the backend of your tool
 *
 * Copyright (c) 2017 - Tom Lutzenberger (lutzenbergerthomas at gmail dot com)
 * https://github.com/tomlutzenberger/device-info
 *
 * @license: Licensed under the MIT license
 * https://github.com/tomlutzenberger/device-info/blob/master/LICENSE
 * https://tomlutzenberger.github.io/device-info/
 */
const DeviceInfo=()=>{const e={getInnerWidth:()=>o(window.innerWidth,"window.innerWidth"),getInnerHeight:()=>o(window.innerHeight,"window.innerHeight"),setWindowInnerDimension:()=>r("window-inner-dimension",`${e.getInnerWidth()}x${e.getInnerHeight()}`),getOuterWidth:()=>o(window.outerWidth,"window.outerWidth"),getOuterHeight:()=>o(window.outerHeight,"window.outerHeight"),setWindowOuterDimension:()=>r("window-outer-dimension",`${e.getOuterWidth()}x${e.getOuterHeight()}`),getMaxWidth:()=>o(window.screen.availWidth,"window.screen.availWidth"),getMaxHeight:()=>o(window.screen.availHeight,"window.screen.availHeight"),setWindowMaxDimension:()=>r("window-max-dimension",`${e.getMaxWidth()}x${e.getMaxHeight()}`),getSize:()=>{let n="";n=window.fullScreen?"Fullscreen":e.getOuterWidth()===window.screen.availWidth&&e.getOuterHeight()===window.screen.availHeight?"Maximized":160===e.getOuterWidth()&&28===e.getOuterHeight()?"Minimized":"Restored";return n},setWindowSize:()=>r("window-size",`${e.getSize()}`)};const n={getWidth:()=>o(window.screen.width,"window.screen.width"),getHeight:()=>o(window.screen.height,"window.screen.height"),setDimension:()=>r("screen-dimension",`${n.getWidth()}x${n.getHeight()}`),getPixelRatio:()=>o(window.devicePixelRatio,"window.devicePixelRatio"),setPixelRatio:()=>r("screen-pixel-ratio",`${n.getPixelRatio()}x`),getColorDepth:()=>o(window.screen.colorDepth,"window.screen.colorDepth"),setColorDepth:()=>r("screen-color-depth",`${n.getColorDepth()} Bit`),getScreenType:()=>{let n=!0;(window.screenX<0||window.screenY<0||window.screenX>e.getMaxWidth()||window.screenY>e.getMaxHeight())&&(n=!1);return n?"Primary":"Secondary"},setScreenType:()=>r("screen-type",`${n.getScreenType()} Screen`),getScreenPosition:()=>{let n="";let i="";n=window.screenX<0?"Left":window.screenX>e.getMaxWidth()?"Right":"Center";i=window.screenY<0?"Top":window.screenY>e.getMaxHeight()?"Bottom":"Center";return t(n,i)},setScreenPosition:()=>r("screen-position",`${n.getScreenPosition()}`)};const i=(e,...n)=>{const i=window.console;let t=Object.keys(n).map(e=>n[e]);t.unshift("[DeviceInfo]");if(t.length>=2)return"function"==typeof i[e]?(i[e].apply(console,t),!0):(i.error("console."+e+" is not a valid logging function."),i.debug.apply(console,t),!1);return!1};const t=(e,n,i=" ")=>e===n?e:`${e}${i}${n}`;const o=(e,n)=>void 0===e||null===e?(i("warn",`${n} is undefined (=${e})`),"undefined"):e;const r=(e,n)=>{const t=document.getElementById(e);if(null!==t){const e="undefined"===n?"text-danger":"text-success";return t.lastElementChild.innerHTML=`<span class="${e}">${n}</span>`,!0}return i("error",`${e} is not a DOM element`),!1};const c=()=>{e.setWindowInnerDimension();e.setWindowOuterDimension();e.setWindowMaxDimension();e.setWindowSize();n.setDimension();n.setPixelRatio();n.setColorDepth();n.setScreenType();n.setScreenPosition()};return{execute:c,log:i,mergeValues:t,typeCheck:o,injectIntoDom:r,win:e,screen:n}},di=DeviceInfo();di.execute();